apply plugin: 'idea'

dependencies {
  compile project(':vmstransformer-hollowoutput-model')
}

task generateApi(type:JavaExec) {
  def arguments = project.property('vmsHollowOutputPojosArgs').collect()
  arguments.add("--apiClassName=VMSRawHollowAPI")
  arguments.add("--classPostfix=Hollow")
  arguments.add("--getterPrefix=_")
  arguments.add("--packageName=com.netflix.vms.generated.notemplate")
  arguments.add("--pathToGeneratedFiles=${buildDir}/generated/main/java")
  main = 'com.netflix.hollow.api.codegen.HollowAPIGenerator'
  classpath = configurations.compile
  args(arguments)
}

sourceSets {
  main {
    java {
      srcDir "${buildDir}/generated/main/java"
    }
  }
}

// include generated files in source jar
sourceJar {
  from "${buildDir}/generated/main/java"
}

findbugsMain.onlyIf { false }
checkstyleMain.onlyIf { false }
check.dependsOn.remove(test)

tasks.compileJava.dependsOn(generateApi)

idea {
  module {
    excludeDirs -= file(buildDir)
    buildDir.listFiles({d,f->f != 'generated'} as FilenameFilter).each {excludeDirs += it}
  }
}
