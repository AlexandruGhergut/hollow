package com.netflix.sunjeetsonboardingroot.health;

import com.netflix.runtime.health.api.Health;
import com.netflix.runtime.health.api.HealthIndicator;
import com.netflix.runtime.health.api.HealthIndicatorCallback;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Health indicators notify the health status subsystem if there is an issue with the service.
 * The service instance will periodically update its health status with the discovery service and in
 * essence take itself out of the pool of instances that can serve requests.
 *
 * Your health indicator can grab state from anywhere in your service and determine if it's
 * {@link Health#unhealthy()} or {@link Health#healthy()}.
 *
 * You may have more than one health indicators registered. All registered indicators are composed
 * such that if at least one is "unhealthy" the instance health status will be "unhealthy".
 *
 * You can register them in {@link com.netflix.runtime.health.guice.HealthModule} via:
 * <pre>
 * <code>
 *
 * {@literal @}Override
 *  protected void configureHealth() {
 *      bindAdditionalHealthIndicator().to(CustomHealthIndicator.class);
 *      // Add extra indicator here.
 *      bindAdditionalHealthIndicator().to(AnotherHealthIndicator.class);
 *  }
 * </code>
 * </pre>
 *
 * @author This file is auto-generated by runtime@netflix.com. Feel free to modify.
 */
public class CustomHealthIndicator implements HealthIndicator {
    private static final Logger logger = LoggerFactory.getLogger(CustomHealthIndicator.class);

    @Override
    public void check(HealthIndicatorCallback healthCallback) {
        logger.info("SNAP: Health check invoked!");
        
        healthCallback.inform(Health.healthy().withDetail("message", "All good!").build());

    }
}
