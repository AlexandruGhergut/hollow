package com.netflix.sunjeetsonboardingroot.resource.v1;

import com.netflix.sunjeetsonboardingroot.config.SunjeetsOnboardingRootConfig;
import com.netflix.sunjeetsonboardingroot.model.Greeting;
import com.netflix.sunjeetsonboardingroot.model.SunjeetsOnboardingRootDao;
import com.netflix.spectator.api.Counter;
import com.netflix.spectator.api.Registry;
import org.junit.Before;
import org.junit.Test;

import java.util.Optional;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Matchers.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

/**
 * An example unit test showcasing assertion in a flow API way.
 *
 * @author This file is auto-generated by runtime@netflix.com. Feel free to modify.
 */
public class SunjeetsOnboardingRootResourceTest {

    private SunjeetsOnboardingRootResource sunjeetsOnboardingRootResource;
    private SunjeetsOnboardingRootDao mockDao;

    @Before
    public void setUp() {
        Greeting greeting = new Greeting();
        greeting.setFirstName("Dwight");
        greeting.setUserEmail("dwight@netflix.com");
        greeting.setMessage("Hey");
        mockDao = mock(SunjeetsOnboardingRootDao.class);
        when(mockDao.loadGreeting("dwight@netflix.com")).thenReturn(Optional.of(greeting));

        SunjeetsOnboardingRootConfig mockConfig = mock(SunjeetsOnboardingRootConfig.class);

        Registry mockRegistry = mock(Registry.class);
        Counter mockCounter = mock(Counter.class);
        when(mockRegistry.counter("SunjeetsOnboardingRootResource.numTimesGreetingIsSet")).thenReturn
                (mockCounter);

        sunjeetsOnboardingRootResource = new SunjeetsOnboardingRootResource(mockDao, mockConfig, mockRegistry);
    }

    @Test
    public void testGetGreeting() {
        assertThat(sunjeetsOnboardingRootResource.getGreeting("dwight@netflix.com")).isNotNull().
                extracting(greeting -> greeting.getUserEmail(),
                           greeting -> greeting.getFirstName(),
                           greeting -> greeting.getMessage())
                .containsExactly("dwight@netflix.com", "Dwight", "Hey");
    }

    @Test
    public void testSetGreeting() {
        sunjeetsOnboardingRootResource.setGreeting(new Greeting());
        verify(mockDao, times(1)).storeGreeting(any(Greeting.class));
    }
}
